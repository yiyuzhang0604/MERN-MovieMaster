{"ast":null,"code":"var _jsxFileName = \"/Users/yiyuzhang/NEU/cs5610/Mingyi-SHI-Yiyu-ZHANG-Proj3-Web-app/src/pages/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useRef } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Grid, Image, Card, Button, Icon, Label, Form } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { AuthContext } from \"../context/auth\";\nimport { LikeButton } from \"../components/LikeButton\";\nimport DeleteButton from \"../components/DeleteButton\";\nimport MyPopup from \"../utils/MyPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = props => {\n  _s();\n\n  const postId = props.match.params.postId;\n  const {\n    user\n  } = useContext(AuthContext);\n  const commentInputRef = useRef(null);\n  const [comment, setComment] = useState(\"\");\n  const {\n    data: {\n      getPost\n    } = {}\n  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n  const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\n    update() {\n      setComment(\"\");\n      commentInputRef.current.blur();\n    },\n\n    variables: {\n      postId,\n      body: comment\n    }\n  });\n\n  function deletePostCallback() {\n    props.history.push(\"/\");\n  }\n\n  let postMarkup;\n\n  if (!getPost) {\n    postMarkup = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  } else {\n    const {\n      id,\n      title,\n      director,\n      year,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = getPost;\n    postMarkup = /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 2,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://react.semantic-ui.com/images/avatar/large/molly.png\",\n            size: \"small\",\n            float: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            fluid: true,\n            color: \"\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: moment(createdAt).fromNow(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: director\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n              extra: true,\n              children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n                user: user,\n                post: {\n                  id,\n                  likeCount,\n                  likes\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(MyPopup, {\n                content: \"Comment on post\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  as: \"div\",\n                  labelPosition: \"right\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    basic: true,\n                    color: \"blue\",\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"comments\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    basic: true,\n                    color: \"blue\",\n                    pointing: \"left\",\n                    children: commentCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 9\n              }, this), user && user.username === username && /*#__PURE__*/_jsxDEV(DeleteButton, {\n                postId: id,\n                callback: deletePostCallback\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), user && /*#__PURE__*/_jsxDEV(Card, {\n            fluid: true,\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Post a comment:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ui action input fluid\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Comment..\",\n                    name: \"comment\",\n                    value: comment,\n                    onChange: event => setComment(event.target.value),\n                    ref: commentInputRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"ui button teal\",\n                    disabled: comment.trim() === \"\",\n                    onClick: submitComment,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 8\n          }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Card, {\n            fluid: true,\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [user && user.username === comment.username && /*#__PURE__*/_jsxDEV(DeleteButton, {\n                postId: id,\n                commentId: comment.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n                children: comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: moment(comment.createdAt).fromNow(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: comment.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 9\n            }, this)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this);\n  }\n\n  return postMarkup;\n};\n\n_s(SinglePost, \"vqJI0APrFVooMwddcqUICXGWw2g=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = SinglePost;\nconst SUBMIT_COMMENT_MUTATION = gql`\n\tmutation ($postId: ID!, $body: String!) {\n\t\tcreateComment(postId: $postId, body: $body) {\n\t\t\tid\n\t\t\tcomments {\n\t\t\t\tid\n\t\t\t\tbody\n\t\t\t\tcreatedAt\n\t\t\t\tusername\n\t\t\t}\n\t\t\tcommentCount\n\t\t}\n\t}\n`;\nconst FETCH_POST_QUERY = gql`\n\tquery ($postId: ID!) {\n\t\tgetPost(postId: $postId) {\n\t\t\tid\n\t\t\ttitle\n\t\t\tdirector\n\t\t\tyear\n\t\t\tcreatedAt\n\t\t\tusername\n\t\t\tlikeCount\n\t\t\tlikes {\n\t\t\t\tusername\n\t\t\t}\n\t\t\tcommentCount\n\t\t\tcomments {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\tcreatedAt\n\t\t\t\tbody\n\t\t\t}\n\t\t}\n\t}\n`;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/yiyuzhang/NEU/cs5610/Mingyi-SHI-Yiyu-ZHANG-Proj3-Web-app/src/pages/SinglePost.js"],"names":["React","useContext","useState","useRef","gql","useQuery","useMutation","Grid","Image","Card","Button","Icon","Label","Form","moment","AuthContext","LikeButton","DeleteButton","MyPopup","SinglePost","props","postId","match","params","user","commentInputRef","comment","setComment","data","getPost","FETCH_POST_QUERY","variables","submitComment","SUBMIT_COMMENT_MUTATION","update","current","blur","body","deletePostCallback","history","push","postMarkup","id","title","director","year","createdAt","username","comments","likes","likeCount","commentCount","fromNow","event","target","value","trim","map"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport {\n\tGrid,\n\tImage,\n\tCard,\n\tButton,\n\tIcon,\n\tLabel,\n\tForm,\n} from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nimport { AuthContext } from \"../context/auth\";\nimport { LikeButton } from \"../components/LikeButton\";\nimport DeleteButton from \"../components/DeleteButton\";\nimport MyPopup from \"../utils/MyPopup\";\n\nconst SinglePost = (props) => {\n\tconst postId = props.match.params.postId;\n\tconst { user } = useContext(AuthContext);\n\tconst commentInputRef = useRef(null);\n\n\tconst [comment, setComment] = useState(\"\");\n\n\tconst { data: { getPost } = {} } = useQuery(FETCH_POST_QUERY, {\n\t\tvariables: {\n\t\t\tpostId,\n\t\t},\n\t});\n\n\tconst [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\n\t\tupdate() {\n\t\t\tsetComment(\"\");\n\t\t\tcommentInputRef.current.blur();\n\t\t},\n\t\tvariables: {\n\t\t\tpostId,\n\t\t\tbody: comment,\n\t\t},\n\t});\n\n\tfunction deletePostCallback() {\n\t\tprops.history.push(\"/\");\n\t}\n\n\tlet postMarkup;\n\tif (!getPost) {\n\t\tpostMarkup = <p>Loading post...</p>;\n\t} else {\n\t\tconst {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tdirector,\n\t\t\tyear,\n\t\t\tcreatedAt,\n\t\t\tusername,\n\t\t\tcomments,\n\t\t\tlikes,\n\t\t\tlikeCount,\n\t\t\tcommentCount,\n\t\t} = getPost;\n\n\t\tpostMarkup = (\n\t\t\t<Grid>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column width={2}>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tsrc='https://react.semantic-ui.com/images/avatar/large/molly.png'\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tfloat='right'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column width={10}>\n\t\t\t\t\t\t<Card fluid color=''>\n\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t<Card.Header>{title}</Card.Header>\n\t\t\t\t\t\t\t\t<Card.Meta>{moment(createdAt).fromNow(true)}</Card.Meta>\n\t\t\t\t\t\t\t\t<Card.Description>{director}</Card.Description>\n\t\t\t\t\t\t\t\t<Card.Description>{year}</Card.Description>\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<Card.Content extra>\n\t\t\t\t\t\t\t\t<LikeButton user={user} post={{ id, likeCount, likes }} />\n\t\t\t\t\t\t\t\t<MyPopup content='Comment on post'>\n\t\t\t\t\t\t\t\t\t<Button as='div' labelPosition='right'>\n\t\t\t\t\t\t\t\t\t\t<Button basic color='blue'>\n\t\t\t\t\t\t\t\t\t\t\t<Icon name='comments' />\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Label basic color='blue' pointing='left'>\n\t\t\t\t\t\t\t\t\t\t\t{commentCount}\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</MyPopup>\n\t\t\t\t\t\t\t\t{user && user.username === username && (\n\t\t\t\t\t\t\t\t\t<DeleteButton postId={id} callback={deletePostCallback} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t{user && (\n\t\t\t\t\t\t\t<Card fluid>\n\t\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t\t<p>Post a comment:</p>\n\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t<div className='ui action input fluid'>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Comment..'\n\t\t\t\t\t\t\t\t\t\t\t\tname='comment'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => setComment(event.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\tref={commentInputRef}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='ui button teal'\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={comment.trim() === \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={submitComment}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{comments.map((comment) => (\n\t\t\t\t\t\t\t<Card fluid key={comment.id}>\n\t\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t\t{user && user.username === comment.username && (\n\t\t\t\t\t\t\t\t\t\t<DeleteButton postId={id} commentId={comment.id} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<Card.Header>{comment.username}</Card.Header>\n\t\t\t\t\t\t\t\t\t<Card.Meta>\n\t\t\t\t\t\t\t\t\t\t{moment(comment.createdAt).fromNow(true)}\n\t\t\t\t\t\t\t\t\t</Card.Meta>\n\t\t\t\t\t\t\t\t\t<Card.Description>{comment.body}</Card.Description>\n\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t</Grid>\n\t\t);\n\t}\n\n\treturn postMarkup;\n};\n\nconst SUBMIT_COMMENT_MUTATION = gql`\n\tmutation ($postId: ID!, $body: String!) {\n\t\tcreateComment(postId: $postId, body: $body) {\n\t\t\tid\n\t\t\tcomments {\n\t\t\t\tid\n\t\t\t\tbody\n\t\t\t\tcreatedAt\n\t\t\t\tusername\n\t\t\t}\n\t\t\tcommentCount\n\t\t}\n\t}\n`;\n\nconst FETCH_POST_QUERY = gql`\n\tquery ($postId: ID!) {\n\t\tgetPost(postId: $postId) {\n\t\t\tid\n\t\t\ttitle\n\t\t\tdirector\n\t\t\tyear\n\t\t\tcreatedAt\n\t\t\tusername\n\t\t\tlikeCount\n\t\t\tlikes {\n\t\t\t\tusername\n\t\t\t}\n\t\t\tcommentCount\n\t\t\tcomments {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\tcreatedAt\n\t\t\t\tbody\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}