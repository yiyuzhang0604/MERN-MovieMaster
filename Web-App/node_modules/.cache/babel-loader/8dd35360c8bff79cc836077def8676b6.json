{"ast":null,"code":"var _jsxFileName = \"/Users/yiyuzhang/NEU/cs5610/Mingyi-SHI-Yiyu-ZHANG-Proj3-Web-app/src/context/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null\n};\n\nif (localStorage.getItem(\"jwtToken\")) {\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem(\"jwtToken\");\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  login: userData => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return { ...state,\n        user: action.payload\n      };\n\n    case \"LOGOUT\":\n      return { ...state,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem(\"jwtToken\", userData.token);\n    dispatch({\n      type: \"LOGIN\",\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem(\"jwtToken\");\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      login,\n      logout\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/yiyuzhang/NEU/cs5610/Mingyi-SHI-Yiyu-ZHANG-Proj3-Web-app/src/context/auth.js"],"names":["React","useReducer","createContext","jwtDecode","initialState","user","localStorage","getItem","decodedToken","exp","Date","now","removeItem","AuthContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","dispatch","setItem","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAArB;;AAEA,IAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AACrC,QAAMC,YAAY,GAAGL,SAAS,CAACG,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAA9B;;AAEA,MAAIC,YAAY,CAACC,GAAb,GAAmB,IAAnB,GAA0BC,IAAI,CAACC,GAAL,EAA9B,EAA0C;AACzCL,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA,GAFD,MAEO;AACNR,IAAAA,YAAY,CAACC,IAAb,GAAoBG,YAApB;AACA;AACD;;AAED,MAAMK,WAAW,gBAAGX,aAAa,CAAC;AACjCG,EAAAA,IAAI,EAAE,IAD2B;AAEjCS,EAAAA,KAAK,EAAGC,QAAD,IAAc,CAAE,CAFU;AAGjCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAHiB,CAAD,CAAjC;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,OAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENb,QAAAA,IAAI,EAAEc,MAAM,CAACE;AAFP,OAAP;;AAID,SAAK,QAAL;AACC,aAAO,EACN,GAAGH,KADG;AAENb,QAAAA,IAAI,EAAE;AAFA,OAAP;;AAID;AACC,aAAOa,KAAP;AAZF;AAcA;;AAED,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC5B,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBvB,UAAU,CAACgB,WAAD,EAAcb,YAAd,CAApC;;AAEA,WAASU,KAAT,CAAeC,QAAf,EAAyB;AACxBT,IAAAA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiCV,QAAQ,CAACW,KAA1C;AACAF,IAAAA,QAAQ,CAAC;AACRJ,MAAAA,IAAI,EAAE,OADE;AAERC,MAAAA,OAAO,EAAEN;AAFD,KAAD,CAAR;AAIA;;AAED,WAASC,MAAT,GAAkB;AACjBV,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACAY,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA;;AAED,sBACC,QAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AAAEf,MAAAA,IAAI,EAAEa,KAAK,CAACb,IAAd;AAAoBS,MAAAA,KAApB;AAA2BE,MAAAA;AAA3B,KADR;AAAA,OAEKO;AAFL;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;GAtBQD,Y;;KAAAA,Y;AAwBT,SAAST,WAAT,EAAsBS,YAAtB","sourcesContent":["import React, { useReducer, createContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\n\nconst initialState = { user: null };\n\nif (localStorage.getItem(\"jwtToken\")) {\n\tconst decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\n\n\tif (decodedToken.exp * 1000 < Date.now()) {\n\t\tlocalStorage.removeItem(\"jwtToken\");\n\t} else {\n\t\tinitialState.user = decodedToken;\n\t}\n}\n\nconst AuthContext = createContext({\n\tuser: null,\n\tlogin: (userData) => {},\n\tlogout: () => {},\n});\n\nfunction authReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"LOGIN\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.payload,\n\t\t\t};\n\t\tcase \"LOGOUT\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: null,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction AuthProvider(props) {\n\tconst [state, dispatch] = useReducer(authReducer, initialState);\n\n\tfunction login(userData) {\n\t\tlocalStorage.setItem(\"jwtToken\", userData.token);\n\t\tdispatch({\n\t\t\ttype: \"LOGIN\",\n\t\t\tpayload: userData,\n\t\t});\n\t}\n\n\tfunction logout() {\n\t\tlocalStorage.removeItem(\"jwtToken\");\n\t\tdispatch({ type: \"LOGOUT\" });\n\t}\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{ user: state.user, login, logout }}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}