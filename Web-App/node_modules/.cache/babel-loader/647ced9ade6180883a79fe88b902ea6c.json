{"ast":null,"code":"var _jsxFileName = \"/Users/yiyuzhang/NEU/cs5610/Mingyi-SHI-Yiyu-ZHANG-Proj3-Web-app/src/ApolloProvider.js\";\nimport React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: \"https://moviepostreviewapp.herokuapp.com/\" //uri: \"http://localhost:5001/\",\n\n});\nconst authLink = setContext(() => {\n  const token = localStorage.getItem(\"jwtToken\");\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ``\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 2\n}, this);","map":{"version":3,"sources":["/Users/yiyuzhang/NEU/cs5610/Mingyi-SHI-Yiyu-ZHANG-Proj3-Web-app/src/ApolloProvider.js"],"names":["React","App","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","setContext","httpLink","uri","authLink","token","localStorage","getItem","headers","Authorization","client","link","concat","cache"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC/BI,EAAAA,GAAG,EAAE,2CAD0B,CAE/B;;AAF+B,CAAD,CAA/B;AAKA,MAAMC,QAAQ,GAAGH,UAAU,CAAC,MAAM;AACjC,QAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACA,SAAO;AACNC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAEJ,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAwB;AADpC;AADH,GAAP;AAKA,CAP0B,CAA3B;AASA,MAAMK,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC/Bc,EAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBV,QAAhB,CADyB;AAE/BW,EAAAA,KAAK,EAAE,IAAIf,aAAJ;AAFwB,CAAjB,CAAf;AAKA,4BACC,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEY,MAAxB;AAAA,yBACC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADD","sourcesContent":["import React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\n\nconst httpLink = createHttpLink({\n\turi: \"https://moviepostreviewapp.herokuapp.com/\",\n\t//uri: \"http://localhost:5001/\",\n});\n\nconst authLink = setContext(() => {\n\tconst token = localStorage.getItem(\"jwtToken\");\n\treturn {\n\t\theaders: {\n\t\t\tAuthorization: token ? `Bearer ${token}` : ``,\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nexport default (\n\t<ApolloProvider client={client}>\n\t\t<App />\n\t</ApolloProvider>\n);\n"]},"metadata":{},"sourceType":"module"}