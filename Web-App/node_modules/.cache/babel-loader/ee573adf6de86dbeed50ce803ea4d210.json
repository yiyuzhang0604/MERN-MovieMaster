{"ast":null,"code":"var _jsxFileName = \"/Users/yiyuzhang/NEU/cs5610/Mingyi-SHI-Yiyu-ZHANG-Proj3-Web-app/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { AuthContext } from \"../context/auth\";\nimport { useForm } from \"../utils/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(loginUserCallback, {\n    username: \"\",\n    password: \"\"\n  });\n  const [loginUser, {\n    loading\n  }] = useMutation(LOGIN_USER, {\n    update(_, _ref) {\n      let {\n        data: {\n          login: userData\n        }\n      } = _ref;\n      context.login(userData);\n      props.history.push(\"/\");\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      className: loading ? \"loading\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Username\",\n        placeholder: \"Username...\",\n        name: \"username\",\n        type: \"text\",\n        value: values.username,\n        error: errors.username ? true : false,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"Password\",\n        placeholder: \"Password...\",\n        name: \"password\",\n        type: \"password\",\n        value: values.password,\n        error: errors.password ? true : false,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui error message\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: Object.values(errors).map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"exenV4i3hsmyHghAOFiQc3yik/o=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Login;\nconst LOGIN_USER = gql`\n\tmutation login($username: String!, $password: String!) {\n\t\tlogin(username: $username, password: $password) {\n\t\t\tid\n\t\t\temail\n\t\t\tusername\n\t\t\tcreatedAt\n\t\t\ttoken\n\t\t}\n\t}\n`;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/yiyuzhang/NEU/cs5610/Mingyi-SHI-Yiyu-ZHANG-Proj3-Web-app/src/pages/Login.js"],"names":["React","useContext","useState","Button","Form","useMutation","gql","AuthContext","useForm","Login","props","context","errors","setErrors","loginUserCallback","loginUser","onChange","onSubmit","values","username","password","loading","LOGIN_USER","update","_","data","login","userData","history","push","onError","err","graphQLErrors","extensions","exception","variables","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nimport { AuthContext } from \"../context/auth\";\nimport { useForm } from \"../utils/hooks\";\n\nfunction Login(props) {\n\tconst context = useContext(AuthContext);\n\tconst [errors, setErrors] = useState({});\n\n\tfunction loginUserCallback() {\n\t\tloginUser();\n\t}\n\n\tconst { onChange, onSubmit, values } = useForm(loginUserCallback, {\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t});\n\n\tconst [loginUser, { loading }] = useMutation(LOGIN_USER, {\n\t\tupdate(_, { data: { login: userData } }) {\n\t\t\tcontext.login(userData);\n\t\t\tprops.history.push(\"/\");\n\t\t},\n\t\tonError(err) {\n\t\t\tsetErrors(err.graphQLErrors[0].extensions.exception.errors);\n\t\t},\n\t\tvariables: values,\n\t});\n\n\treturn (\n\t\t<div className='form-container'>\n\t\t\t<Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : \"\"}>\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<Form.Input\n\t\t\t\t\tlabel='Username'\n\t\t\t\t\tplaceholder='Username...'\n\t\t\t\t\tname='username'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={values.username}\n\t\t\t\t\terror={errors.username ? true : false}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t\t<Form.Input\n\t\t\t\t\tlabel='Password'\n\t\t\t\t\tplaceholder='Password...'\n\t\t\t\t\tname='password'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tvalue={values.password}\n\t\t\t\t\terror={errors.password ? true : false}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t\t<Button type='submit' primary>\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t\t{Object.keys(errors).length > 0 && (\n\t\t\t\t<div className='ui error message'>\n\t\t\t\t\t<ul className='list'>\n\t\t\t\t\t\t{Object.values(errors).map((value) => (\n\t\t\t\t\t\t\t<li key={value}>{value}</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nconst LOGIN_USER = gql`\n\tmutation login($username: String!, $password: String!) {\n\t\tlogin(username: $username, password: $password) {\n\t\t\tid\n\t\t\temail\n\t\t\tusername\n\t\t\tcreatedAt\n\t\t\ttoken\n\t\t}\n\t}\n`;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}